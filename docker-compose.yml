services:
  application:
    build: .
    hostname: application
    container_name: "${APP_NAME}-application"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "true" ]
    ports:
      - "${APP_PORT:-80}:80"
    depends_on:
      - mailcatcher
      - postgres
      - rabbitmq
      - redis
    environment:
      APP_ENV: "${APP_ENV}"
      APP_NAME: "${APP_NAME}"
      APP_PORT: "${APP_PORT}"
      APP_URL: "${APP_URL}"
      DATABASE_URL: "${DATABASE_URL}"
      MAILER_DSN: "${MAILER_DSN}"
      MESSENGER_TRANSPORT_DSN: "${MESSENGER_TRANSPORT_DSN}"
      REDIS_DSN: "${REDIS_DSN}"
    volumes:
      - ./:/opt/project:consistent
      - bundles:/opt/project/public/bundles
      - storage:/opt/project/var
    networks:
      internal:

  redis:
    image: redis:latest
    hostname: redis
    container_name: "${APP_NAME}-redis"
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      internal:

  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    container_name: "${APP_NAME}-rabbitmq"
    restart: unless-stopped
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      internal:

  mailcatcher:
    image: opifex/mailcatcher:latest
    hostname: mailcatcher
    container_name: "${APP_NAME}-mailcatcher"
    restart: unless-stopped
    ports:
      - "1080:1080"
    networks:
      internal:

volumes:
  bundles:
  postgres:
  rabbitmq:
  redis:
  storage:

networks:
  internal:
    name: "${APP_NAME}-network"
